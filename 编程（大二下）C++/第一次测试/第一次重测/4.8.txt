/*
Description
定义一个类Name,它只有一个成员pname,用来存储人名在堆中的起始地址。它的成员函数，可根据需要自行设计。



定义一个类Tbirth，它有2个成员month和year，分别用来存储月和年。它的成员函数根据需要自行设计。当创建对象时，若年、月都不给，则分别取2022、4，若只给年份，则月份取1。



定义一个类Student，它的每个对象都有三个成员：分别是Name的对象name、TBirth的对象birth和年龄age。当创建对象时，若不给任何数据，则姓名取“noname”, 出生年月取2001年12月，年龄取20。若只给姓名，则birth的值取2002年6月，年龄取19， 



请设计以上三个类，以满足下面程序的运行



void DispStudedntNum()  //随时可以被调用以显示学生人数



{



       ____________________; //自行填上所缺代码



}



//以下代码不需要提交，系统会添加到你的代码之后，上面的DispStudedntNum函数需要提交



void fn(Student s)



{



       s.Disp();



       DispStudedntNum();



}



 



int main()



{      



       Tbirth birth1,birth2(1980);



       birth1.Disp();



       birth2.Disp();



       DispStudedntNum();



       char name1[10],name2[10];



       int y,m,age;



       cin>>name1;



       cin>>name2>>y>>m>>age;



       Student s1, s2(name1), s3(name2,y,m,age); 



       DispStudedntNum();



       s1.Disp();



       s2.Disp();



       s3.Disp();



       fn(s3);



       DispStudedntNum();



       return 0;



}


Input
输入人名



输入人名、出生年份、月份和年龄


Output
按样例格式输出


Sample Input
lisi
zhang 2003 5 21
Sample Output
4/2022
1/1980
0
3
noname
12/2001
20
lisi
6/2002
19
zhang
5/2003
21
zhang
5/2003
21
4
3
*/
/////////////////////////////////////////////////////////////////////////////////////////
// Tbirth.h: interface for the TBirth class.
 
#if !defined(AFX_TBIRTH_Heaa63cf1_6fe3_4d8c_9c74_a22a71773604INCLUDED_)
#define AFX_TBIRTH_Heaa63cf1_6fe3_4d8c_9c74_a22a71773604INCLUDED_
 
#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
 
class Tbirth  
{
public:
    Tbirth();
    Tbirth(int nl);
    Tbirth(int nl,int yl);
    void Disp();
protected:
    int month;
    int year;
};
 
#endif // !defined(AFX_TBIRTH_Heaa63cf1_6fe3_4d8c_9c74_a22a71773604INCLUDED_)
 
/////////////////////////////////////////////////////////////////////////////////////////
// Name.h: interface for the Name class.
 
#if !defined(AFX_NAME_H424f08fd_10ee_468b_b577_df118c30c297INCLUDED_)
#define AFX_NAME_H424f08fd_10ee_468b_b577_df118c30c297INCLUDED_
 
#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
 
class Name  
{
public:
    Name(char *p);
    Name(Name &);
    virtual ~Name();
    void Disp();
protected:
    char *pname;
};
 
#endif // !defined(AFX_NAME_H424f08fd_10ee_468b_b577_df118c30c297INCLUDED_)
 
 
/////////////////////////////////////////////////////////////////////////////////////////
// Student.h: interface for the Student class.
#if !defined(AFX_STUDENT_H9ba3c5b0_4981_40f3_98a7_37d02aee5a25INCLUDED_)
#define AFX_STUDENT_H9ba3c5b0_4981_40f3_98a7_37d02aee5a25INCLUDED_
 
#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
 
//#include "Name.h" //多文件用
//#include "Tbirth.h" //多文件用
 
class Student  
{
public:
    Student();
    Student(char *p,int nl,int yl,int nn);
    Student(char *p);
 
    Student(Student &p);
 
    ~Student();
    static void chu();
    void Disp();
     
protected:
    Name name;
    Tbirth birth;
    int age;
    static int s;
};
 
#endif // !defined(AFX_STUDENT_H9ba3c5b0_4981_40f3_98a7_37d02aee5a25INCLUDED_)
 
/////////////////////////////////////////////////////////////////////////////////////////
// Tbirth.cpp: implementation of the TBirth class.
 
//#include "Tbirth.h" //多文件用
#include<iostream>
using namespace std;
 
void Tbirth::Disp()
{
    cout<<month<<"/"<<year<<endl;
}
 
Tbirth::Tbirth()
{
    month=4;
    year=2022;
}
Tbirth::Tbirth(int nl)
{
    month=1;
    year=nl;
}
Tbirth::Tbirth(int nl,int yl)
{
    month=yl;
    year=nl;
}
//////////////////////////////////////////////////////////////////////
//Name.cpp
 
//#include "Name.h"  //多文件用
#include <cstring>
//#include<iostream>    //多文件用
//using namespace std;   //多文件用
 
Name::Name(Name &p)
{
    pname=new char[strlen(p.pname)+1];
    strcpy(pname,p.pname);
}
 
void Name::Disp()
{
    cout<<pname<<endl;
}
 
Name::Name(char *p)
{
    pname=new char[strlen(p)+1];
    strcpy(pname,p);
}
 
Name::~Name()
{
    delete []pname;
}
 
 
///////////////////////////////
// Student.cpp: implementation of the Student class.
/*
#include "Student.h"
#include<iostream>  //多文件用
using namespace std;
*/
 
int Student::s=0;
 
void Student::chu()
{
    cout<<s<<endl;
}
 
Student::Student(char *p,int nl,int yl,int nn):name(p),birth(nl,yl)
{
    age=nn;
    s++;
}
 
Student::Student():name("noname"),birth(2001,12),age(20)
{
    s++;
}
 
Student::Student(char *p):name(p),birth(2002,6)
{
    age=19;
    s++;
}
 
void Student::Disp()
{
    name.Disp();
    birth.Disp();
    cout<<age<<endl;
}
 
Student::Student(Student &p):name(p.name),birth(p.birth)
{
    age=p.age;
    s++;
}
Student::~Student()
{
    s--;
}
///////////////////////////////
//zhu.cpp
/*
#include "Student.h"
#include<iostream>  //多文件用
using namespace std;
*/
void DispStudedntNum()  //随时可以被调用以显示学生人数
{
    Student::chu();//自行填上所缺代码
}
void fn(Student s)
{
    s.Disp();
    DispStudedntNum();
}
 
int main()
{   
    Tbirth birth1,birth2(1980);
    birth1.Disp();
    birth2.Disp();
    DispStudedntNum();
    char name1[10],name2[10];
    int y,m,age;
    cin>>name1;
    cin>>name2>>y>>m>>age;
    Student s1, s2(name1), s3(name2,y,m,age); 
    DispStudedntNum();
    s1.Disp();
    s2.Disp();
    s3.Disp();
    fn(s3);
    DispStudedntNum();
    return 0;
}