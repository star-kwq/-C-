/*
Description
师范类本科院校的学生，毕业之前需要到中学实习，此时，他的身份既是学生，又是老师。请在上题（2817）的基础上，增加一个师范实习生类Stu_teacher,要求：  

（1）、使用继承派生出该类  

（2）、Student、Teacher、Stu_teacher三个类的disp()函数功能各不相同，并能表现出多态性   



main函数如下：



int main()

{

    char name[20],title[20];

    int age,month,day,year,score;

    cin>>name>>age>>year>>month>>day>>score;

    Student s(name,age,year,month,day,score);

    cin>>name>>age>>title;

    Teacher t(name,age,title);

    cin>>name>>age>>year>>month>>day>>score>>title;

    Stu_teacher st(name,age,year,month,day,score,title);

    s.Disp();  //显示学生的信息

    t.Disp();  //显示教师的信息

    st.Disp(); //显示实习老师的信息

    //t.Assign(s,90);

    //s.Disp();   

    fn(s);  //调用函数fn，显示参数s的有关信息

    fn(t);  //调用函数fn，显示参数t的有关信息

    fn(st); //调用函数fn，显示参数st的有关信息

    return 0;

}



请完善各个类并给出fn()函数的定义。



附：2817题目描述



1、定义下面的类：（根据主函数要求，需要什么成员函数，自己分析设定）      

（1）写一个Person类，数据成员包括姓名、年龄。      

（2）写一个Date类，成员为年、月、日。      

（3）写一个Student类，除了姓名和年龄，还包括生日（Date的对象）和成绩，该类由Person派生而来 。    

（4）再写一个Teacher类，除了姓名和年龄，还有职称。并且，教师可以指定学生的成绩。该类也由Person派生而来。      



2、编写主函数，生成一个学生、一个教师，输出他们的数据；教师重新指定学生的成绩后，输出学生的新数据。



 


Input
先输入学生的数据：姓名，年龄，出生年月日，分数



再输入教室的数据：姓名，年龄，职称



最后输入实习生的数据：姓名，年龄，出生日期，分数，职称


Output
按sample out格式输出三个人的信息


Sample Input
Liu 20 1988 1 1 78
LI 45 professor
sun 26 1980 3 3 90 shixisheng
Sample Output
name:Liu age:20
birthday:1988/1/1
score:78
name:LI age:45
title:professor
name:sun age:26
birthday:1980/3/3
score:90
title:shixisheng
name:Liu age:20
birthday:1988/1/1
score:78
name:LI age:45
title:professor
name:sun age:26
birthday:1980/3/3
score:90
title:shixisheng
*/
/////////////////////////////////////////////////////////////
// Person.h
#if !defined(AFX_PERSON_H__16813547_5A5B_4E41_A8B9_D4048A9335C9__INCLUDED_)
#define AFX_PERSON_H__16813547_5A5B_4E41_A8B9_D4048A9335C9__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif 


class Person  
{
public:
	Person(char *,int);
	virtual ~Person();
	virtual void Disp();
protected:
	char *name;
	int nl;
};

#endif

////////////////////////////////////////////
// Date.h

#if !defined(AFX_DATE_H__99DB82A8_30B8_45EF_839C_7E4959E28B4F__INCLUDED_)
#define AFX_DATE_H__99DB82A8_30B8_45EF_839C_7E4959E28B4F__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif 

class Date  
{
public:
	Date(int,int,int);
	void chu();
protected:
	int n;
	int y;
	int r;
};

#endif 

//////////////////////////////////////////////////////////////////////
// Teacher.h


#if !defined(AFX_TEACHER_H__E76072B0_121E_4B07_9C67_5D6E71969CE9__INCLUDED_)
#define AFX_TEACHER_H__E76072B0_121E_4B07_9C67_5D6E71969CE9__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif 

//#include"Person.h"  ////多文件用
class Teacher:virtual public Person
{
public:
	Teacher(char *t,int n,char *c);
    void AssignScore(class Student &p,int n); //用来修改某学生成绩
	virtual ~Teacher();
	void Disp();
protected:
	char *zc;  //用来存储教师职称
};


#endif // !defined(AFX_TEACHER_H__E76072B0_121E_4B07_9C67_5D6E71969CE9__INCLUDED_)

//////////////////////////////////////////////////////////////////////
// Student.h

#if !defined(AFX_STUDENT_H__280F7FEB_F99D_478B_8DA5_41B1AA7A0F09__INCLUDED_)
#define AFX_STUDENT_H__280F7FEB_F99D_478B_8DA5_41B1AA7A0F09__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
/*
#include"Teacher.h"
#include"Person.h"   //多文件用
#include"Date.h"
*/
class Student:virtual public Person
{
public:
	Student(char *p,int n,int N,int Y,int R,int cj);
	friend void Teacher::AssignScore(Student &p,int n);
	void Disp();
protected:
	Date sr;
    int score;
};

#endif
//////////////////////////////////////////////////////////////////////
// Stu_teacher.h: interface for the Stu_teacher class.
//

#if !defined(AFX_STU_TEACHER_H__E716ABF7_F92E_40AB_B046_7D1E326E76E0__INCLUDED_)
#define AFX_STU_TEACHER_H__E716ABF7_F92E_40AB_B046_7D1E326E76E0__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

//#include "Teacher.h"//多文件用
//#include "Student.h"//多文件用
class Stu_teacher:public Student,public Teacher
{
public:
	Stu_teacher(char *,int,int,int,int,int,char *);
	void Disp();

};

#endif // !defined(AFX_STU_TEACHER_H__E716ABF7_F92E_40AB_B046_7D1E326E76E0__INCLUDED_)

//////////////////////////////////////////////////////////////////////
// Person.cpp

//#include "Person.h" //多文件用
#include<cstring>
#include<iostream> 
using namespace std;

Person::Person(char *p,int n)
{
	name=new char[strlen(p)+1];
	strcpy(name,p);
	nl=n;	
}

void Person::Disp()
{
	cout<<"name:"<<name<<" "<<"age:"<<nl<<endl;
}

Person::~Person()
{
	delete []name;
}

//////////////////////////////////////////////////////////////////////
// Date.cpp
/*
#include "Date.h"//多文件用
#include<iostream> 
using namespace std;
*/
Date::Date(int N,int Y,int R)
{
	n=N;
	y=Y;
	r=R;
}

void Date::chu()
{
	cout<<"birthday:"<<n<<"/"<<y<<"/"<<r<<endl;
}

////////////////////////////////////////////////////////
//Teacher.cpp

/*
#include "Teacher.h"  //多文件用
#include "Student.h"
#include "Date.h"
#include<cstring>
#include<iostream>
using namespace std;
*/
void Teacher::AssignScore(Student &p,int n)
{
	p.score=n;
	cout<<"name:"<<p.name<<" "<<"age:"<<p.nl<<endl;
	p.sr.chu();
	cout<<"score:"<<p.score<<endl;
}

Teacher::Teacher(char *t,int n,char *c):Person(t,n)
{
	zc=new char[strlen(c)+1];
	strcpy(zc,c);
	
}
void Teacher::Disp()
{
	cout<<"name:"<<name<<" "<<"age:"<<nl<<endl;
	cout<<"title:"<<zc<<endl;
}
Teacher::~Teacher()
{
	delete []zc;
}

////////////////////////////////////////////////////////
//Student.cpp
/*
#include "Student.h"
#include<cstring>
#include<iostream>  //这几行多文件用
using namespace std;
*/

Student::Student(char *p,int n,int N,int Y,int R,int cj):Person(p,n),sr(N,Y,R)
{
	score=cj;
}

void Student::Disp()
{
	cout<<"name:"<<name<<" "<<"age:"<<nl<<endl;
	sr.chu();
	cout<<"score:"<<score<<endl;
}

////////////////////////////////////////////////////////
//Stu_teacher.cpp
/*
#include "Stu_teacher.h"
#include<cstring>
#include<iostream>  //这几行多文件用
using namespace std;
*/

Stu_teacher::Stu_teacher(char *p,int n,int N,int Y,int R,int cj,char *z):Student(p,n,N,Y,R,cj),Teacher(p,n,z),Person(p,n)
{
}

void Stu_teacher::Disp()
{
	cout<<"name:"<<name<<" "<<"age:"<<nl<<endl;
	sr.chu();
	cout<<"score:"<<score<<endl;
	cout<<"title:"<<zc<<endl;
}

//-------------------------------------------
//zhu.cpp
/*
#include<iostream>
using namespace std;  //这些多文件用
#include"Teacher.h"
#include"Student.h"
*/

void fn(Person &s)
{
	s.Disp();
}
int main()

{

    char name[20],title[20];

    int age,month,day,year,score;

    cin>>name>>age>>year>>month>>day>>score;

    Student s(name,age,year,month,day,score);

    cin>>name>>age>>title;

    Teacher t(name,age,title);

    cin>>name>>age>>year>>month>>day>>score>>title;

    Stu_teacher st(name,age,year,month,day,score,title);

    s.Disp();  //显示学生的信息

    t.Disp();  //显示教师的信息

    st.Disp(); //显示实习老师的信息

    //t.Assign(s,90);

    //s.Disp();   

    fn(s);  //调用函数fn，显示参数s的有关信息

    fn(t);  //调用函数fn，显示参数t的有关信息

    fn(st); //调用函数fn，显示参数st的有关信息

    return 0;

}