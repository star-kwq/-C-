/*Description
自行设计一个日期类Tdate，含有三个数据成员：月、日、年。

用下面的主函数生成一个日期对象，然后在fn函数中将日期设置为某年某月某日，并输出这个日期。

 

int main()

{

________________//声明fn函数

int a,b,c;

Tdate d;                      //生成一个日期对象

cin>>a>>b>>c;          

________________//将对象d设置成c年a月b日

________________//调用fn函数，不允许拿a,b,c做参数

________________//输出经fn修改后的新日期

return 0;

}

 

void fn(______________)

{
_______________//先显示原来的日期，即c年a月b日

int m,d,y;

cin>>m>>d>>y;  //要设置的月日年


       ______________//在此填写代码，将主函数中对象设置成新日期      

}

请完善所有代码

Input
输入两次，每次三个整数，分别代表月、日、年

Output
在fn中输出两个日期，格式为：2012/10/1

Sample Input
2 28 2000
10 1 2012
Sample Output
2000/2/28
2012/10/1*/
//Tdate.h

class Tdate
{
public:
	void Set(int, int,int);  //用来设置
	void Out();         //用来输出
protected:
	int  n;//月
	int  y;//日
	int  r;//年

};

///////////////////////////////////////////////////////////////////////////
//Tdate.cpp
#include<iostream>
//#include"Tdate.h"
using namespace std;
void Tdate::Set(int c,int a,int b) //用来设置
{
	n=c;
	y=a;
	r=b;
}
void Tdate::Out()         //用来输出
{
	cout<<n<<"/"<<y<<"/"<<r<<endl;
}

///////////////////////////////////////////////////////////////////////////
//nian yue ri.cpp

//#include<iostream>               //多文件用
//#include"Tdate.h"              //多文件用
//using namespace std;             //多文件用
int main()
{

	void fn(Tdate &);//声明fn函数
	int a,b,c;
	Tdate d;                      //生成一个日期对象
	cin>>a>>b>>c;          

	d.Set(c,a,b);//将对象d设置成c年a月b日

	fn(d);//调用fn函数，不允许拿a,b,c做参数

	d.Out();//输出经fn修改后的新日期

	return 0;

}

void fn(Tdate &b)

{
	b.Out();//先显示原来的日期，即c年a月b日

	int m,d,y;

	cin>>m>>d>>y;  //要设置的月日年

	b.Set(y,m,d);//在此填写代码，将主函数中对象设置成新日期      
}
*****************************************************************************************************************************
/*Description
编写一个类Box，箱子的尺寸是固定的：50*30*40，可以向箱子中装苹果，也可以从箱子里向外取苹果。请生成一个这样的箱子，放进若干苹果，再取出若干苹果。放进和取出的苹果数目均从键盘输入，设放进去的苹果都能盛下，要取出的苹果数量不多于里面的苹果数。另：箱子在扔掉之前，若箱子里还有苹果，应该给出倒空信息（输出Empty）。


Input
输入两个整数，分别代表装进和取出的苹果数


Output
生成箱子后，马上显示箱子的参数（长宽高）及里面的苹果数



放进一些苹果后，显示箱子中的苹果数



取出若干苹果后，再显示一次里面的苹果数



扔掉箱子时，需要给出倒空信息（若无苹果则不需要）


Sample Input
30 10
Sample Output
50,30,40
0
30
20
Empty*/
// Box.h: interface for the Box class.
//
//////////////////////////////////////////////////////////////////////

/*#if !defined(AFX_BOX_H__61C1E548_9868_4CA7_8AC8_7A54B41AA573__INCLUDED_)
#define AFX_BOX_H__61C1E548_9868_4CA7_8AC8_7A54B41AA573__INCLUDED_

#if _MSC_VER > 1000                              //这个多行注释多文件用
#pragma once
#endif // _MSC_VER > 1000*/

class Box  
{
public:
	Box();
	virtual ~Box();
	void J(int);//放入
	void C(int);//拿出
protected:
	int  c;//长
	int  k;//宽
	int  g;//高
	int  sl;//数量

};
///////////////////////////////////////////////////////////////////////////
// Box.cpp: implementation of the Box class.
//
//////////////////////////////////////////////////////////////////////


#include<iostream>
//#include "Box.h"  //多文件用
using namespace std;

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

Box::Box()
{
	c=50;
	k=30;
	g=40;
	sl=0;
	cout<<c<<","<<k<<","<<g<<endl<<sl<<endl;
}

Box::~Box()
{
	if(sl!=0)
	{
		cout<<"Empty"<<endl;
	}

}
void Box::J(int s)
{
	sl+=s;
	cout<<sl<<endl;
}
void Box::C(int s)
{
	sl-=s;
	cout<<sl<<endl;
}
///////////////////////////////////////////////////////////////////////////
//nian yue ri.cpp

//#include<iostream>               //多文件用
//#include "Box.h"                 //多文件用
//using namespace std;             //多文件用
int main()
{

	
	int js,cs;
	Box d;                      //生成一个对象
	cin>>js>>cs;          

	d.J(js);

	d.C(cs);

	return 0;

}