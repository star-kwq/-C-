/*
Description
设有以下类定义：      

  class Teacher{      

   public:      

      //略      



   protected:      

     char *pname  //存名字的地址      

     int age;      

  };      

 

   class Student{      

   public:      

      //略      

   protected:      

     char name[10];      

     int score;      

  };      



   class Tutor{      

   public:      

     //略      

   protected:      

     Student s;      

     Teacher t;      

     int num;    //存储师生会面次数      

  };      

         

且有主函数：      


int main()    

{ 

    char name1[15],name2[15];

    int score,age;

    cin>>name1>>score>>name2>>age;

    Tutor tt1(name1,score,name2,age),tt2;    

    tt1.Disp();     

    tt1.Date();    //师生碰面一次    

    tt2=tt1;         //此处调用的哪段代码？    

    tt2.Disp();    

    Tutor tt3=tt1; //此处调用的哪段代码？    

    tt3.Date();     

    tt3.Disp();  

    return 0;   

}  


  

请完善三个类，使主函数能得到正确的执行结果

Input
输入学生的姓名，分数，老师的姓名，年龄

Output
输出如sample output所示的运行结果

Sample Input
Zhang 89 Li 35
Sample Output
Student:Zhang,89
Teacher:Li,35
Number:0
Student:Zhang,89
Teacher:Li,35
Number:1
Student:Zhang,89
Teacher:Li,35
Number:2
*/
//////////////////////////////////////////////////////////////////////
// Teacher.h: interface for the Teacher class.
//

#if !defined(AFX_TEACHER_H__FC3D8C0D_5F8A_46A9_BB8C_F9F3F26C9873__INCLUDED_)
#define AFX_TEACHER_H__FC3D8C0D_5F8A_46A9_BB8C_F9F3F26C9873__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

class Teacher
{      
public:      
	Teacher(char *,int);
	Teacher();
	Teacher(Teacher &);
	Teacher& operator=(Teacher&);
	~Teacher();
	void disp();
protected:      
	char *pname;  //存名字的地址      
	int age;      
};   

#endif // !defined(AFX_TEACHER_H__FC3D8C0D_5F8A_46A9_BB8C_F9F3F26C9873__INCLUDED_)

//////////////////////////////////////////////////////////////////////
// Student.h: interface for the Student class.
//

#if !defined(AFX_STUDENT_H__83E9A0D7_E531_4F15_8145_0EC428D10A02__INCLUDED_)
#define AFX_STUDENT_H__83E9A0D7_E531_4F15_8145_0EC428D10A02__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

class Student
{      
public:      
	Student(char *,int);
	Student();
    void disp();
protected:
	char name[10];      
	int score;      
};

#endif // !defined(AFX_STUDENT_H__83E9A0D7_E531_4F15_8145_0EC428D10A02__INCLUDED_)

//////////////////////////////////////////////////////////////////////
// Tutor.h: interface for the Tutor class.
//

#if !defined(AFX_TUTOR_H__72F528C4_0175_4E23_8696_557348ADD420__INCLUDED_)
#define AFX_TUTOR_H__72F528C4_0175_4E23_8696_557348ADD420__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
/*
#include "Teacher.h"  //多文件用
#include "Student.h"
*/
class Tutor
{      
public:      
	Tutor(char *,int,char *,int);
	Tutor();
	void Disp();
	void Date();
protected:      
	Student s;      
	Teacher t;      
	int num;    //存储师生会面次数      
};  

#endif // !defined(AFX_TUTOR_H__72F528C4_0175_4E23_8696_557348ADD420__INCLUDED_)

//////////////////////////////////////////////////////////////////////
// Teacher.cpp: implementation of the Teacher class.
//

//#include "Teacher.h"  //多文件用
#include<cstring>
#include<iostream>
using namespace std; 

Teacher::Teacher(char *m,int nl)
{
	pname=new char[strlen(m)+1];
	strcpy(pname,m);
	age=nl;
}

Teacher::Teacher()
{
}

Teacher::Teacher(Teacher &t)
{
	pname=new char[strlen(t.pname)+1];
	strcpy(pname,t.pname);
	age=t.age;
}

Teacher::~Teacher()
{
	delete []pname;
}

Teacher& Teacher::operator=(Teacher& t)
{
	pname=new char[strlen(t.pname)+1];
	strcpy(pname,t.pname);
	age=t.age;
	return *this;
}

void Teacher::disp()
{
	cout<<"Teacher:"<<pname<<","<<age<<endl;
}
//////////////////////////////////////////////////////////////////////
// Student.cpp: implementation of the Student class.
//
/*
#include "Student.h"
#include<cstring>  //多文件用
#include<iostream>
using namespace std; 
*/
Student::Student(char *m,int f)
{
	strcpy(name,m);
	score=f;
}

Student::Student()
{

}

void Student::disp()
{
	cout<<"Student:"<<name<<","<<score<<endl;
}
//////////////////////////////////////////////////////////////////////
// Tutor.cpp: implementation of the Tutor class.
//
/*
#include "Tutor.h"  //多文件用
#include<iostream>
using namespace std;
*/
Tutor::Tutor(char *sm,int f,char * tm,int nl):s(sm,f),t(tm,nl)
{
	num=0;
}
Tutor::Tutor():s(),t()
{
}

void Tutor::Disp()
{
	s.disp();
	t.disp();
	cout<<"Number:"<<num<<endl;
}

void Tutor::Date()
{
	num++;
}
////////////////////////////////////////////
//main.cpp
/*
#include<iostream>
using namespace std;  //多文件用
#include"Tutor.h"
*/
int main()    
{ 
    char name1[15],name2[15];
    int score,age;
    cin>>name1>>score>>name2>>age;
    Tutor tt1(name1,score,name2,age),tt2;    
    tt1.Disp();     
    tt1.Date();    //师生碰面一次    
    tt2=tt1;         //此处调用的哪段代码？赋值运算    
    tt2.Disp();    
    Tutor tt3=tt1; //此处调用的哪段代码？ 拷贝
    tt3.Date();     
    tt3.Disp();  
    return 0;   
}  

