/*
Description
1、定义下面的类：（根据主函数要求，需要什么成员函数，自己分析设定）       

（1）写一个Person类，数据成员包括姓名、年龄。       

（2）写一个Date类，成员为年、月、日。       

（3）写一个Student类，除了姓名和年龄，还包括生日（Date的对象）和成绩，该类由Person派生而来 。     

（4）再写一个Teacher类，除了姓名和年龄，还有职称。并且，教师可以指定学生的成绩。该类也由Person派生而来。       



2、编写主函数，生成一个学生、一个教师，输出他们的数据；教师重新指定学生的成绩后，输出学生的新数据。
Input
输入学生的姓名、年令、生日、原始分数


再输入老师的姓名、年龄、职称


最后输入学生的新分数


如：


Zhang 19 1992 10 30 59


Li 30 jiangshi


70

Output
输出学生的数据，老师的数据以及指定新分后的学生数据

Sample Input
Zhang 19 1992 10 30 59
Li 30 jiangshi
70
Sample Output
name:Zhang age:19
birthday:1992/10/30
score:59
name:Li age:30
title:jiangshi
name:Zhang age:19
birthday:1992/10/30
score:70

*/
/////////////////////////////////////////////////////////////
// Person.h
#if !defined(AFX_PERSON_H__16813547_5A5B_4E41_A8B9_D4048A9335C9__INCLUDED_)
#define AFX_PERSON_H__16813547_5A5B_4E41_A8B9_D4048A9335C9__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif 


class Person  
{
public:
	Person(char *,int);
	virtual ~Person();
protected:
	char *name;
	int nl;
};

#endif

////////////////////////////////////////////
// Date.h

#if !defined(AFX_DATE_H__99DB82A8_30B8_45EF_839C_7E4959E28B4F__INCLUDED_)
#define AFX_DATE_H__99DB82A8_30B8_45EF_839C_7E4959E28B4F__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif 

class Date  
{
public:
	Date(int,int,int);
	void chu();
protected:
	int n;
	int y;
	int r;
};

#endif 

//////////////////////////////////////////////////////////////////////
// Teacher.h


#if !defined(AFX_TEACHER_H__E76072B0_121E_4B07_9C67_5D6E71969CE9__INCLUDED_)
#define AFX_TEACHER_H__E76072B0_121E_4B07_9C67_5D6E71969CE9__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif 

//#include"Person.h"  ////多文件用
class Teacher:public Person
{
public:
	Teacher(char *t,int n,char *c);
    void AssignScore(class Student &p,int n); //用来修改某学生成绩
	virtual ~Teacher();
protected:
	char *zc;  //用来存储教师职称
};


#endif // !defined(AFX_TEACHER_H__E76072B0_121E_4B07_9C67_5D6E71969CE9__INCLUDED_)

//////////////////////////////////////////////////////////////////////
// Student.h

#if !defined(AFX_STUDENT_H__280F7FEB_F99D_478B_8DA5_41B1AA7A0F09__INCLUDED_)
#define AFX_STUDENT_H__280F7FEB_F99D_478B_8DA5_41B1AA7A0F09__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
/*
#include"Teacher.h"
#include"Person.h"   //多文件用
#include"Date.h"
*/
class Student:public Person
{
public:
	Student(char *p,int n,int N,int Y,int R,int cj);
	friend void Teacher::AssignScore(Student &p,int n);
protected:
	Date sr;
    int score;
};

#endif

//////////////////////////////////////////////////////////////////////
// Person.cpp

//#include "Person.h" //多文件用
#include<cstring>
#include<iostream>
using namespace std;

Person::Person(char *p,int n)
{
	name=new char[strlen(p)+1];
	strcpy(name,p);
	nl=n;
	cout<<"name:"<<name<<" "<<"age:"<<nl<<endl;
}

Person::~Person()
{
	delete []name;
}

//////////////////////////////////////////////////////////////////////
// Date.cpp
/*
#include "Date.h"
#include<iostream>  //多文件用
using namespace std;
*/
Date::Date(int N,int Y,int R)
{
	n=N;
	y=Y;
	r=R;
	chu();
}

void Date::chu()
{
	cout<<"birthday:"<<n<<"/"<<y<<"/"<<r<<endl;
}

////////////////////////////////////////////////////////
//Teacher.cpp

/*
#include "Teacher.h"  //多文件用
#include "Student.h"
#include "Date.h"
#include<cstring>
#include<iostream>
using namespace std;
*/
void Teacher::AssignScore(Student &p,int n)
{
	p.score=n;
	cout<<"name:"<<p.name<<" "<<"age:"<<p.nl<<endl;
	p.sr.chu();
	cout<<"score:"<<p.score<<endl;
}

Teacher::Teacher(char *t,int n,char *c):Person(t,n)
{
	zc=new char[strlen(c)+1];
	strcpy(zc,c);
	cout<<"title:"<<zc<<endl;
}

Teacher::~Teacher()
{
	delete []zc;
}

////////////////////////////////////////////////////////
//Student.cpp
/*
#include "Student.h"
#include<cstring>
#include<iostream>  //这几行多文件用
using namespace std;
*/

Student::Student(char *p,int n,int N,int Y,int R,int cj):Person(p,n),sr(N,Y,R)
{

	score=cj;
	cout<<"score:"<<score<<endl;
}


//-------------------------------------------
//zhu.cpp
/*
#include<iostream>
using namespace std;  //这些多文件用
#include"Teacher.h"
#include"Student.h"
*/
int main()
{
	char sm[20],tm[20];
	char zc[20];
	int n,y,r;
	int snl,tnl;
	int f,gf;
	cin>>sm>>snl>>n>>y>>r>>f;
	cin>>tm>>tnl>>zc;
	cin>>gf;
	Student s(sm,snl,n,y,r,f);
	Teacher t(tm,tnl,zc);
	t.AssignScore(s,gf);
	return 0;

}