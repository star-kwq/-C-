/*
Description
师范类本科院校的学生，毕业之前需要到中学实习，此时，他的身份既是学生，又是老师。已知：


（1）学生有姓名和年龄两项数据，学生能显示自己的姓名和年龄，还能学习，当他学习时，屏幕输出I'm studying 


（2）老师有姓名和职称两项数据，老师也能显示自己的两项数据，还能上课，当他上课时，屏幕输出I'm teaching 


（3）师范生实习时，他的职称是“jxzj”(注：见习助教的简拼)。


请由学生和老师两个类派生出师范实习生类Stu_teacher,并能运行下面的程序：


int main()

{

    char name[15],title[20]; 

    int age; 

    cin>>name>>age>>title;


    Person p(name);

    p.Disp();

    


    Student s(name,age);

    s.Disp();

    s.Study();

    


    Teacher t(name,title);

    t.Disp();

    t.Teach();

    


    Stu_teacher st(name,age); 

    st.Disp();

    st.Study(); 

    st.Teach(); 

    return 0; 

} 


注意：主函数已经在后台，你只需要提交其他代码即可，系统会自动把主函数代码添加到你提交的代码之后。


特别注意：若提交不正确，修改或重新提交时，一定要把主函数代码去掉，否则，系统再添加一份主函数，你的代码将有两个主函数

Input
输入姓名和年龄

Output
输出相关信息


Sample Input
zhangsan
19
zhujiao

Sample Output
zhangsan
zhangsan
19
I'm studying
zhangsan
zhujiao
I'm teaching
zhangsan
19
jxzj
I'm studying
I'm teaching
*/
//////////////////////////////////////////////////////////////////////
// Person.h: interface for the Person class.
//

#if !defined(AFX_PERSON_H__6F13B097_CFC7_4165_9D09_678C1F10771F__INCLUDED_)
#define AFX_PERSON_H__6F13B097_CFC7_4165_9D09_678C1F10771F__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

class Person  
{
public:
	Person(char *m);
	void Disp();
	~Person();
protected:
	char *name;
};

#endif // !defined(AFX_PERSON_H__6F13B097_CFC7_4165_9D09_678C1F10771F__INCLUDED_)

//////////////////////////////////////////////////////////////////////
// Teacher.h: interface for the Teacher class.
//

#if !defined(AFX_TEACHER_H__74C1C772_240F_449B_864E_1970BCBBD4E8__INCLUDED_)
#define AFX_TEACHER_H__74C1C772_240F_449B_864E_1970BCBBD4E8__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

//#include "Person.h"   //多文件用
class Teacher:virtual public Person
{
public:
	Teacher(char *,char *);
	virtual ~Teacher();
	void Disp();
	void Teach();
protected:
	char *zc;

};

#endif // !defined(AFX_TEACHER_H__74C1C772_240F_449B_864E_1970BCBBD4E8__INCLUDED_)

//////////////////////////////////////////////////////////////////////
// Student.h: interface for the Student class.
//

#if !defined(AFX_STUDENT_H__2822F1D1_E42B_4ABB_868E_94E0D1B26BA0__INCLUDED_)
#define AFX_STUDENT_H__2822F1D1_E42B_4ABB_868E_94E0D1B26BA0__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

//#include "Person.h"   //多文件用
class Student:virtual public Person 
{
public:
	Student(char *,int);
	void Disp();
	void Study();
protected:
	int nl;
};

#endif // !defined(AFX_STUDENT_H__2822F1D1_E42B_4ABB_868E_94E0D1B26BA0__INCLUDED_)

//////////////////////////////////////////////////////////////////////
// Stu_teacher.h: interface for the Stu_teacher class.
//

#if !defined(AFX_STU_TEACHER_H__E716ABF7_F92E_40AB_B046_7D1E326E76E0__INCLUDED_)
#define AFX_STU_TEACHER_H__E716ABF7_F92E_40AB_B046_7D1E326E76E0__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

//#include "Teacher.h"//多文件用
//#include "Student.h"//多文件用
class Stu_teacher:public Student,public Teacher
{
public:
	Stu_teacher(char *,int);
	void Disp();

};

#endif // !defined(AFX_STU_TEACHER_H__E716ABF7_F92E_40AB_B046_7D1E326E76E0__INCLUDED_)

//////////////////////////////////////////////////////////////////////
// Person.cpp: implementation of the Person class.
//

//#include "Person.h"//多文件用
#include<cstring>
#include<iostream>
using namespace std;

Person::Person(char *m)
{
	name=new char[strlen(m)+1];
	strcpy(name,m);
}

Person::~Person()
{
	delete []name;
}

void Person::Disp()
{
	cout<<name<<endl;
}
//////////////////////////////////////////////////////////////////////
// Teacher.cpp: implementation of the Teacher class.
//

//#include "Teacher.h"//多文件用
//#include<cstring>//多文件用
//#include<iostream>//多文件用
//using namespace std;//多文件用

Teacher::Teacher(char *m,char *z):Person(m)
{
	zc=new char[strlen(z)+1];
	strcpy(zc,z);
}

Teacher::~Teacher()
{
	delete []zc;
}

void Teacher::Disp()
{
	cout<<name<<endl<<zc<<endl;
}

void Teacher::Teach()
{
	cout<<"I'm teaching"<<endl;
}
//////////////////////////////////////////////////////////////////////
// Student.cpp: implementation of the Student class.
//

//#include "Student.h"//多文件用
//#include<iostream>//多文件用
//using namespace std;//多文件用

Student::Student(char *m,int n):Person(m)
{
	nl=n;
}

void Student::Disp()
{
	cout<<name<<endl<<nl<<endl;
}
void Student::Study()
{
	cout<<"I'm studying"<<endl;
}

//////////////////////////////////////////////////////////////////////
// Stu_teacher.cpp:
//#include "Stu_teacher.h"//多文件用
//#include<iostream>//多文件用
//using namespace std;//多文件用


Stu_teacher::Stu_teacher(char *m,int n):Teacher(m,"jxzj"),Student(m,n),Person(m)
{
}
void Stu_teacher::Disp()
{
	cout<<name<<endl<<nl<<endl<<zc<<endl;
}

////////////////////////////////////////////
//zhu.cpp

//#include<iostream>//多文件用
//using namespace std;//多文件用
//#include"Stu_teacher.h"//多文件用
int main()
{

    char name[15],title[20]; 
    int age; 
    cin>>name>>age>>title;

    Person p(name);
    p.Disp();

    Student s(name,age);
    s.Disp();
    s.Study();

    
    Teacher t(name,title);
    t.Disp();
    t.Teach();

    Stu_teacher st(name,age); 
    st.Disp();
    st.Study(); 
    st.Teach(); 

    return 0; 
} 