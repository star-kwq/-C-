/*
Description
定义Student和GraduateStudent（由Student派生）两个类，学生包含姓名和分数两个数据，研究生包括姓名、分数和导师姓名。并使下面的程序能得到正确结果。 

说明：下面的程序已经在后台，系统自动在你提交的代码后面添加上这些代码（即：你提交的程序，不应该再含有下面的这些代码，修改代码时，也应把这些代码去掉再提交）

  

void fn(Student&s)

{

        cout<<s;

}



int main()   

{

       char s_name[20], t_name[20];

       int  score;

       cin>>s_name>>score;

       Student s(s_name, score);   

       cin>>s_name>>score>>t_name;


       GraduateStudent g(s_name, score , t_name);      

       cout<<s<<g;   

       fn(s);

       fn(g);

       return 0;

} 
Input
分别输入学生和研究生的数据

Output
输出样例所示的输出结果

Sample Input
zhangsan 85
lisi 90 liulaoshi
Sample Output
name:zhangsan,score:85
name:lisi,score:90,teacher:liulaoshi
name:zhangsan,score:85
name:lisi,score:90,teacher:liulaoshi
*/
//////////////////////////////////////////////////////////////////////
// Student.h: interface for the Student class.
//

#if !defined(AFX_STUDENT_H__01BD2FFD_0AA9_4278_ADFA_A94D9E39F15A__INCLUDED_)
#define AFX_STUDENT_H__01BD2FFD_0AA9_4278_ADFA_A94D9E39F15A__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#include<iostream>
using namespace std;
class Student  
{
public:
	Student(char *,int);
	virtual ~Student();
	virtual void sc(ostream &);
protected:
	char *name;
	int f;
};

#endif // !defined(AFX_STUDENT_H__01BD2FFD_0AA9_4278_ADFA_A94D9E39F15A__INCLUDED_)

//////////////////////////////////////////////////////////////////////
// GraduateStudent.h: interface for the GraduateStudent class.
//

#if !defined(AFX_GRADUATESTUDENT_H__91C58E1A_40A6_4669_AE7B_1AD1732404E1__INCLUDED_)
#define AFX_GRADUATESTUDENT_H__91C58E1A_40A6_4669_AE7B_1AD1732404E1__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

//#include "Student.h"         //多文件用
class GraduateStudent:public Student
{
public:
	GraduateStudent(char *,int,char *);
	virtual ~GraduateStudent();
	void sc(ostream &);
protected:
	char *tname;
};

#endif // !defined(AFX_GRADUATESTUDENT_H__91C58E1A_40A6_4669_AE7B_1AD1732404E1__INCLUDED_)

//////////////////////////////////////////////////////////////////////
// Student.cpp: implementation of the Student class.
//


#include<cstring>
//#include "Student.h"         //多文件用

Student::Student(char *m,int F)
{
	name=new char[strlen(m)+1];
	strcpy(name,m);
	f=F;
}
void Student::sc(ostream &s)
{
	s<<"name:"<<name<<","<<"score:"<<f<<endl;
}
Student::~Student()
{
	delete []name;
}

//////////////////////////////////////////////////////////////////////
// GraduateStudent.cpp: implementation of the GraduateStudent class.
//

#include<cstring>
//#include "GraduateStudent.h"         //多文件用

GraduateStudent::GraduateStudent(char *sm,int f,char *tm):Student(sm,f)
{
	tname=new char[strlen(tm)+1];
	strcpy(tname,tm);
}

void GraduateStudent::sc(ostream & s)
{
	s<<"name:"<<name<<","<<"score:"<<f<<","<<"teacher:"<<tname<<endl;
}
GraduateStudent::~GraduateStudent()
{
	delete []tname;
}

///////////////////////////////////
//main.cpp

//#include"GraduateStudent.h"         //多文件用

ostream& operator<<(ostream &c,Student &s)
{
	s.sc(c);
	return c;
}
void fn(Student&s)
{
        cout<<s;
}
int main()   
{
       char s_name[20], t_name[20];
       int  score;
       cin>>s_name>>score;
       Student s(s_name, score);   
       cin>>s_name>>score>>t_name;
       GraduateStudent g(s_name, score , t_name);      
       cout<<s<<g;   
       fn(s);
       fn(g);
       return 0;
} 